<p>
  A simple wrapper around the touch-enabled carousel-library: <a href="http://idangero.us/swiper/">Swiper</a> by idangerous
</p>

<h3>Basic usage</h3>

<SwiperContainer
  @currentSlide={{this.currentSlide}}
  @onChange={{fn (mut this.currentSlide)}}
>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Speedy Gonswiper</h3>

<SwiperContainer @options={{hash speed=100}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

{{this.currentSlide}}

<h3>Swiper Events</h3>

<SwiperContainer @events={{hash reachEnd=this.onSwiperEnd}}>
  <SwiperSlide>Start</SwiperSlide>
  <SwiperSlide>End</SwiperSlide>
</SwiperContainer>

<h3>Default Navigation</h3>
<SwiperContainer @options={{hash navigation=true}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
</SwiperContainer>

<h3>Infinite + Pagination</h3>

<SwiperContainer @options={{hash pagination=true loop=true}}>
  <SwiperSlide class='myslide myslide-1'>Slide 1</SwiperSlide>
  <SwiperSlide class='myslide myslide-2'>Slide 2</SwiperSlide>
  <SwiperSlide class='myslide myslide-3'>Slide 3</SwiperSlide>
  <SwiperSlide class='myslide myslide-4'>Slide 4</SwiperSlide>
  <SwiperSlide class='myslide myslide-5'>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Vertical + Pagination</h3>

<SwiperContainer @options={{hash pagination=true direction="vertical"}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Vertical + Free &amp; Sticky</h3>

<SwiperContainer @options={{hash freeMode=true freeModeSticky=true vertical=true}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Centered Slides + Pagination + Cursor</h3>

<SwiperContainer @options={{hash grabCursor=true pagination=true centered=true slidesPerView=4 spaceBetween=5}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Keyboard + Mousewheel Control</h3>

<SwiperContainer @options={{hash keyboard=true mousewheel=true slidesPerView=2}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Change Listener</h3>

<p>The configured action receives the HTML-Element of the selected slide.</p>

<SwiperContainer @onChange={{this.addToHistory}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<br>

<h3>2 way binded index</h3>

<SwiperContainer @currentSlide={{this.currentSlide}}>
  <SwiperSlide>Slide 1</SwiperSlide>
  <SwiperSlide>Slide 2</SwiperSlide>
  <SwiperSlide>Slide 3</SwiperSlide>
  <SwiperSlide>Slide 4</SwiperSlide>
  <SwiperSlide>Slide 5</SwiperSlide>
</SwiperContainer>

<br>
<a {{on "click" this.goToTwo}} class="btn btn--s btn--gray" style="float: right; cursor: pointer;">Go to 2</a>
Current Slideindex: {{this.currentSlide}}

<h4>¡ Atención, Atención !</h4>

<p>Please note that, in difference to a bare Swiper, this will always return <em>the correct</em>
  Index of the current slide. Even in loops.</p>

<SwiperContainer @currentSlide={{this.currentPicture}} @options={{hash loop=true centered=true slidesPerView=4}}>
  <SwiperSlide class='myslide myslide-1'>Slide 1</SwiperSlide>
  <SwiperSlide class='myslide myslide-2'>Slide 2</SwiperSlide>
  <SwiperSlide class='myslide myslide-3'>Slide 3</SwiperSlide>
  <SwiperSlide class='myslide myslide-4'>Slide 4</SwiperSlide>
  <SwiperSlide class='myslide myslide-5'>Slide 5</SwiperSlide>
</SwiperContainer>

<h3>Triggering an update</h3>
<p>If you find yourself adding/removing slides, you need to 'update' the swipe-container.</p>
<p>You can do so by referencing a variable to observe for changes. This is usually your list of slides</p>

<h3>Forcing an update/repaint directly</h3>
<p>Swiper as shown to be a little bit touchy when it comes to situations where you show it via css / manipulate
  the container after initialization. For those scenarios you can force a refresh of the component via your
  controller</p>

<p><code>forceUpdate()</code> also comes with an optional boolean parameter <code>updateTranslate</code> which
  defaults to false. See <a href="http://idangero.us/swiper/api/#methods">the Swiper docs</a> for more details.</p>

<strong>Template</strong>

<strong>Controller</strong>

<h3>Contextual Slides</h3>

<SwiperContainer as |container|>
  <container.slide>Slide 1</container.slide>
  <container.slide>Slide 2</container.slide>
</SwiperContainer>

